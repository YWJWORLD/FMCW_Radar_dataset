options:
  parameters:
    author: ''
    category: '[Radar Waveform Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: hb
    hier_block_src_path: '.:'
    id: Costas_waveform
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Costas Waveform Blocks
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: multi_const
  id: variable
  parameters:
    comment: ''
    value: prime_number-1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 52.0]
    rotation: 0
    state: true
- name: blocks_float_to_complex_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 208.0]
    rotation: 0
    state: true
- name: blocks_repeat_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: int(seq_len / (prime_number-1))
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 220.0]
    rotation: 0
    state: true
- name: blocks_vco_f_0
  id: blocks_vco_f
  parameters:
    affinity: ''
    alias: ''
    amplitude: source_amplitude
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    sensitivity: samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 204.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\nclass blk(gr.sync_block):  # other base classes are\
      \ basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block example\
      \ - a simple multiply const\"\"\"\n\n    def __init__(self, primitive_root =\
      \ 2, prime_number = 11):  # only default arguments here\n        \"\"\"arguments\
      \ to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Costas Code Vector Source',   # will show\
      \ up in GRC\n            in_sig=None,\n            out_sig=[np.float32]\n  \
      \      )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.root\
      \ = primitive_root\n        self.number = prime_number\n        \n    def work(self,\
      \ input_items,output_items):\n        \"\"\"example: multiply with constant\"\
      \"\"\n        items = []\n        multiply_const = int(100*(self.number-1))\
      \        \n        for i in range(1, self.number):\n            items = np.r_[items,\
      \ (self.root ** i) % self.number] \n        \n        items = items * multiply_const\n\
      \        for i in range(len(output_items[0])):\n            output_items[0][i]\
      \ = items[i%(self.number-1)] \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    prime_number: prime_number
    primitive_root: primitive_root
  states:
    _io_cache: ('Costas Code Vector Source', 'blk', [('primitive_root', '2'), ('prime_number',
      '11')], [], [('0', 'float', 1)], 'Embedded Python Block example - a simple multiply
      const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 212.0]
    rotation: 0
    state: true
- name: pad_sink_0
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: out
    num_streams: '1'
    optional: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1056, 220.0]
    rotation: 0
    state: true
- name: prime_number
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Prime Number
    short_id: ''
    type: eng_float
    value: '11'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 36.0]
    rotation: 0
    state: true
- name: primitive_root
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Primitive Root
    short_id: ''
    type: eng_float
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 36.0]
    rotation: 0
    state: true
- name: samp_rate
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Sampling Rate
    short_id: ''
    type: eng_float
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 36.0]
    rotation: 0
    state: true
- name: seq_len
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Length of Sequence
    short_id: ''
    type: eng_float
    value: '1024'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [848, 28.0]
    rotation: 0
    state: true
- name: source_amplitude
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Source amplitude
    short_id: ''
    type: eng_float
    value: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 36.0]
    rotation: 0
    state: true

connections:
- [blocks_float_to_complex_0, '0', pad_sink_0, '0']
- [blocks_repeat_0, '0', blocks_vco_f_0, '0']
- [blocks_vco_f_0, '0', blocks_float_to_complex_0, '0']
- [blocks_vco_f_0, '0', blocks_float_to_complex_0, '1']
- [epy_block_0, '0', blocks_repeat_0, '0']

metadata:
  file_format: 1
